
package game2;

import javax.swing.ImageIcon;


public class Menue extends javax.swing.JFrame {

    /**
     * Creates new form blup
     */
    public Menue() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        masterSlider = new javax.swing.JSlider();
        masterButton = new javax.swing.JToggleButton();
        musicButton = new javax.swing.JToggleButton();
        soundButton = new javax.swing.JToggleButton();
        musicSlider = new javax.swing.JSlider();
        soundSlider = new javax.swing.JSlider();
        resolutionBox = new javax.swing.JComboBox();
        windowedButton = new javax.swing.JToggleButton();
        snow = new javax.swing.JToggleButton();
        water = new javax.swing.JToggleButton();
        ip = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        port = new javax.swing.JTextField();
        movingIce = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage((new ImageIcon("assets/imgs/icon.png")).getImage());
        setResizable(false);

        jButton1.setText("Start Game with local multiplayer mode");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        masterSlider.setMaximum(50);
        masterSlider.setMinimum(-50);
        masterSlider.setValue(0);

        masterButton.setSelected(true);
        masterButton.setText("Sound");

        musicButton.setSelected(true);
        musicButton.setText("Music");

        soundButton.setSelected(true);
        soundButton.setText("Sound Effects");

        musicSlider.setMaximum(50);
        musicSlider.setMinimum(-50);
        musicSlider.setValue(0);

        soundSlider.setMaximum(50);
        soundSlider.setMinimum(-50);
        soundSlider.setValue(0);

        resolutionBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "320x240", "512x384", "640x480", "800x600", "1024x768", "1280x960", "1600x1200", "2048x1536", "2560x1920" }));
        resolutionBox.setSelectedIndex(4);
        resolutionBox.setToolTipText("resolution");

        windowedButton.setText("Windowed");

        snow.setSelected(true);
        snow.setText("Snow");
        snow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snowActionPerformed(evt);
            }
        });

        water.setSelected(true);
        water.setText("Moving Water");

        ip.setText("serverIp");
        ip.setToolTipText("serverIp");
        ip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipActionPerformed(evt);
            }
        });

        jButton2.setText("Connect to server");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Wait for client to connect");
        jButton3.setActionCommand("wait for client to connect");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        port.setText("port");
        port.setToolTipText("port");

        movingIce.setSelected(true);
        movingIce.setText("Moving ice");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resolutionBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masterSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(musicSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(musicButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(soundButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(soundSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)))
                    .addComponent(windowedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(snow, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(water, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(movingIce, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ip)
                            .addComponent(port, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(masterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(masterSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(musicButton)
                    .addComponent(soundButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(musicSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(soundSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resolutionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(snow)
                    .addComponent(water)
                    .addComponent(movingIce))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(windowedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jButton1.setText("Launching... (this will take a moment)");
        setEnabled(false);
        new Thread(new Runnable() {

            @Override
            public void run() {
                String s = ((String)(resolutionBox.getSelectedItem()));
                int pixelx = Integer.valueOf(s.substring(0, s.indexOf("x")));
                int pixely = Integer.valueOf(s.substring(s.indexOf("x")+1));
                Client c = new LocalMultiplayer();
                new Game2(pixelx, pixely, 120, 120, windowedButton.isSelected(), water.isSelected(), snow.isSelected(), musicSlider.getValue()/5, 
                        soundSlider.getValue()/5, masterSlider.getValue()/5, musicButton.isSelected(), soundButton.isSelected(), masterButton.isSelected(), c, movingIce.isSelected());
                dispose();
            }
        }).start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void snowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snowActionPerformed

    private void ipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jButton1.setText("Launching... (this will take a moment)");
        setEnabled(false);
        new Thread(new Runnable() {

                @Override
                public void run() {
            String s = ((String)(resolutionBox.getSelectedItem()));
            int pixelx = Integer.valueOf(s.substring(0, s.indexOf("x")));
            int pixely = Integer.valueOf(s.substring(s.indexOf("x")+1));
            Client c = new Client(Integer.valueOf(port.getText()), ip.getText());
            new Game2(pixelx, pixely, 120, 120, windowedButton.isSelected(), water.isSelected(), snow.isSelected(), musicSlider.getValue()/5, 
                    soundSlider.getValue()/5, masterSlider.getValue()/5, musicButton.isSelected(), soundButton.isSelected(), masterButton.isSelected(), c, movingIce.isSelected());
                    dispose();
                }
        }).start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jButton1.setText("Launching... (this will take a moment)");
        setEnabled(false);
        new Thread(new Runnable() {

                @Override
                public void run() {
            String s = ((String)(resolutionBox.getSelectedItem()));
            int pixelx = Integer.valueOf(s.substring(0, s.indexOf("x")));
            int pixely = Integer.valueOf(s.substring(s.indexOf("x")+1));
            Client c = new Server(Integer.valueOf(port.getText()));
            new Game2(pixelx, pixely, 120, 120, windowedButton.isSelected(), water.isSelected(), snow.isSelected(), musicSlider.getValue()/5, 
                    soundSlider.getValue()/5, masterSlider.getValue()/5, musicButton.isSelected(), soundButton.isSelected(), masterButton.isSelected(), c, movingIce.isSelected());
                    dispose();
                }
        }).start();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ip;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JToggleButton masterButton;
    private javax.swing.JSlider masterSlider;
    private javax.swing.JToggleButton movingIce;
    private javax.swing.JToggleButton musicButton;
    private javax.swing.JSlider musicSlider;
    private javax.swing.JTextField port;
    private javax.swing.JComboBox resolutionBox;
    private javax.swing.JToggleButton snow;
    private javax.swing.JToggleButton soundButton;
    private javax.swing.JSlider soundSlider;
    private javax.swing.JToggleButton water;
    private javax.swing.JToggleButton windowedButton;
    // End of variables declaration//GEN-END:variables
}
